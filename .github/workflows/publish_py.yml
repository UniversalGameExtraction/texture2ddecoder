name: Publish Python Bindings

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    working-directory: ./bindings/python

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "pypy3.8"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i ${{ matrix.python-version }}
          sccache: "true"
          working-directory: ./bindings/python
      
      - name: Install Just
        uses: extractions/setup-just@v2
      - name: Run Cargo Tests
        run: |
          cargo test
      
      - name: Run pytest
        run: |
          # just venv pytest
          rm -rf .venv
          python3 -m venv .venv
          . .venv/bin/activate
          .venv/bin/pip install wheel pytest mkdocs-material pillow
          maturin develop
          .venv/bin/pytest

  linux:
    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    needs: lint_and_test
    strategy:
      matrix:
        platform:
          - target: x64
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
          - target: aarch64
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
          - target: armv7
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
    
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i ${{ matrix.platform.interpreter }}
          sccache: "true"
          manylinux: auto
          working-directory: ./bindings/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: bindings/python/dist
          retention-days: 1
  
  musllinux:
    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    needs: lint_and_test
    strategy:
      matrix:
        platform:
          - target: x86_64-unknown-linux-musl
            arch: x86_64
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
          - target: i686-unknown-linux-musl
            arch: x86
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
          - target: aarch64-unknown-linux-musl
            arch: aarch64
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
        # all values: [x86_64, x86, aarch64, armhf, armv7, ppc64le, riscv64, s390x]
        # { target: "armv7-unknown-linux-musleabihf", image_tag: "armv7" },
        # { target: "powerpc64le-unknown-linux-musl", image_tag: "ppc64le" },
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i ${{ matrix.platform.interpreter }}
          sccache: "true"
          manylinux: musllinux_1_1
          working-directory: ./bindings/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: musllinux
          path: bindings/python/dist
          retention-days: 1

  windows:
    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: windows-latest
    needs: lint_and_test
    strategy:
      matrix:
        platform:
          - target: x64
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13
          - target: x86
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i ${{ matrix.platform.interpreter }}
          sccache: "true"
          working-directory: ./bindings/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: bindings/python/dist
          retention-days: 1

  macos:
    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: macos-latest
    needs: lint_and_test
    strategy:
      matrix:
        platform:
          - target: x64
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
          - target: aarch64
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13 pypy3.8 pypy3.9 pypy3.10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist -i ${{ matrix.platform.interpreter }}
          sccache: "true"
          working-directory: ./bindings/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: bindings/python/dist
          retention-days: 1

  sdist:
    if: "startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    needs: lint_and_test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
          working-directory: ./bindings/python
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: bindings/python/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist, musllinux]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
